## API - Serviços - rodando no ambiente de produção
# Este projeto é voltado para o CI/CD;

image: docker:latest
services:
    - docker:dind
stages:
    - Dev
    - Dev-test
    - docker_scan
    - Gitlab_Tag
    - Prod-publish
    - Deployment
    - Kubernetes_Deploy

variables:
    REGISTRY: harbor.unimednatal.com.br
    REPOSITORY: busybox-nodejs/unimed/nodejs-busybox
    CONFIG_REPO_NAME: busybox-nodejs
    #PROJECT_FOLDER: nodejs-busybox 

before_script:
    - 'echo "Executando Pipeline para a imagem: $REGISTRY/$REPOSITORY:$CI_COMMIT_SHORT_SHA"'

build:
    stage: Dev
    script:
        - docker build --pull -t $REGISTRY/$REPOSITORY:$CI_COMMIT_SHORT_SHA .
    tags:
        - node-busy
    only:
        - docker/nodejsbusybox

dev-test:
    stage: Dev-test
    dependencies: 
        - build
    script:
        - if [ -z ${REGISTRY_USER+x} ]; then echo "REGISTRY_USER não definida!"; exit 1; fi
        - if [ -z ${REGISTRY_PW+x} ]; then echo "REGISTRY_PW não definida!"; exit 1; fi
        # login no registro docker (Harbor)
        - docker login -u $REGISTRY_USER -p $REGISTRY_PW $REGISTRY
        # levantando o container de testes
        - make docker_up_test
        # realizando testes de disponibilidade do container de testes
        - make docker_log_test
    allow_failure: false
    tags:
        - node-busy
    only:
        - docker/nodejsbusybox

docker_scan:
    stage: docker_scan
    image: aquasec/trivy:latest
    script:
        - trivy image $REGISTRY/$REPOSITORY:$CI_COMMIT_SHORT_SHA --output results/
    tags:
        - node-busy
    only:
        - docker/nodejsbusybox

git-tag:
  stage: Gitlab_Tag
  allow_failure: yes
  dependencies:
        - build
  tags:
      - node-busy
  only:
      - docker/nodejsbusybox
  script:
    - export COMMIT_SHORT_SHA=$(git rev-parse --short HEAD)  # Pega o SHA curto do commit atual
    - git tag $COMMIT_SHORT_SHA  # Cria uma tag com o COMMIT_SHORT_SHA
    - git push origin $COMMIT_SHORT_SHA  # Envia a nova tag para o repositório no GitLab
  needs: ["build","dev-test", "docker_scan"]

publish:
    stage: Prod-publish
    dependencies:
        - build
    script:
        # carrengando as variáveis "$REGISTRY_USER" e "$REGISTRY_PW" 
        - if [ -z ${REGISTRY_USER+x} ]; then echo "REGISTRY_USER não definida!"; exit 1; fi
        - if [ -z ${REGISTRY_PW+x} ]; then echo "REGISTRY_PW não definida!"; exit 1; fi
        # login no registro docker (Harbor)
        - docker login -u $REGISTRY_USER -p $REGISTRY_PW $REGISTRY
        # verificando as imagens antigas (Host)
        #- docker load -i image.tar
        # Enviando a nova imagem ao repositório (Harbor)
        - docker tag $REGISTRY/$REPOSITORY:latest $REGISTRY/$REPOSITORY:$CI_COMMIT_SHORT_SHA
        - docker push $REGISTRY/$REPOSITORY:$CI_COMMIT_SHORT_SHA
    tags:
        - node-busy
    only:
        - docker/nodejsbusybox
    needs: ["build","dev-test","docker_scan","git-tag"]


argocd-deployment: &argocd-deployment
  image: 
    name: harbor.unimednatal.com.br/ubuntu-git/unimed/ubuntu:git
    entrypoint: [ '/bin/bash', '-c', 'ln -snf /bin/bash /bin/sh && /bin/bash -c $0' ] 
    
  stage: Kubernetes_Deploy
  allow_failure: no
  tags:
      - node-busy
  only:
      - docker/nodejsbusybox
  before_script:
    - git config --global user.email "devops@unimednatal.com.br" && git config --global user.name "devopsunimed"    
  script:
    - echo "Clonando o repositório configurado $CONFIG_REPO_NAME"
    - git clone "https://$CI_USER:$CI_USER_TOKEN@gitlab.com/unimed_natal/devops/helmcharts/busybox-nodejs"
    - echo "Entrando no diretório $CONFIG_REPO_NAME"
    - cd $CONFIG_REPO_NAME
    - echo "Listando arquivos"
    - ls -lh
    - git remote -v
    #- git checkout -b $CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
    - 'ls values.yaml | xargs sed -i -r "s/tag: (.*)/tag: $CI_COMMIT_SHORT_SHA/g"'
    - echo "Imagem versionada com a hash do commit $CI_COMMIT_SHORT_SHA"
    - git status
    - git add .
    - git commit -m "Atualizando imagem através do repositório $CI_PROJECT_NAME - $CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA"
    - git push -u #$CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
  only:
    - docker/nodejsbusybox
  needs: ["build","dev-test","git-tag","docker_scan","publish"]