## NodeJS Unimed - Busybox - rodando no ambiente de desenvolvimento
# Este projeto é voltado para testes unistário em estágios do CI;

image: harbor.unimednatal.com.br/busybox-nodejs/${DOCKER_USERNAME}/${APPLICATION_NAME}:${CI_COMMIT_TAG}

variables:
  DOCKER_USERNAME: "unimed"
  APPLICATION_NAME: "nodejs-busybox"

stages:
    - clone
    - build
    - tag
    - test
    - push
    - deploy
    - logs
    - deploy_review

clone:
    stage: clone
    tags:
        - node-busy
    only:
        - docker/nodejsbusybox
    script:
        - cd /home/gitlab-runner/projetos/; rm -rf nodejs-busybox
        - cd /home/gitlab-runner/projetos/; git clone -b docker/nodejsbusybox https://devopsunimed:glpat-PreJFT3SnriFSMAHFouu@gitlab.com/unimed_natal/devops/nodejs-busybox.git nodejs-busybox
        #clonando o repositório para dentro do host apartir de uma branch específica

build:
    stage: build
    tags:
        - node-busy
    only:
        - docker/nodejsbusybox
    script:
        - cd /home/gitlab-runner/projetos/nodejs-busybox; docker build --tag ${DOCKER_USERNAME}/${APPLICATION_NAME}:${CI_COMMIT_TAG} .
        #buildando uma nova imagem docker e tagueando como "latest"  
    needs: ["clone"]
    
tag:
    stage: build
    tags:
        - node-busy
    only:
        - docker/nodejsbusybox
    script:
        - docker tag ${DOCKER_USERNAME}/${APPLICATION_NAME}:${CI_COMMIT_TAG} harbor.unimednatal.com.br/busybox-nodejs/${DOCKER_USERNAME}/${APPLICATION_NAME}:${CI_COMMIT_TAG} 
        #buildando uma nova imagem docker e tagueando como "latest"  
    needs: ["clone", "build"]

test:
    stage: test
    tags:
        - node-busy
    only:
        - docker/nodejsbusybox
    script:
        - cd /home/gitlab-runner/projetos/nodejs-busybox; make test
        #enviando a nova imagem ao repositório do harbor
    needs: ["clone", "build", "tag"]

push:
    stage: push
    tags:
        - node-busy
    only:
        - docker/nodejsbusybox
    script:
        - docker push harbor.unimednatal.com.br/busybox-nodejs/${DOCKER_USERNAME}/${APPLICATION_NAME}:${CI_COMMIT_TAG}
        #enviando a nova imagem ao repositório do harbor
    needs: ["clone", "build","tag", "test"]

deploy:
    stage: deploy
    tags:
        - node-busy
    only:
        - docker/nodejsbusybox
    script:
        - cd /home/gitlab-runner/projetos/nodejs-busybox; docker compose up -d
        #fazendo deployment da stack em docker swarm, através do compose file;
    needs: ["clone", "build", "tag", "test", "push"]

logs:
    stage: logs
    tags:
        - node-busy
    only:
        - docker/nodejsbusybox
    script:
        - cd /home/gitlab-runner/projetos/nodejs-busybox; make test
    needs: ["clone", "build", "tag", "test", "push","deploy"]